// =============================================
// _buttons.scss: Estilos reutilizables para botones
// =============================================

@use "../abstracts/variables" as *;
@use "../abstracts/mixins" as *;
@use "sass:color"; // ✅ Importar módulo Sass nativo

// ------------------------------
// Estilo base para todos los botones
// ------------------------------
.btn {
  @include button-base($color-secundario, $color-blanco);
  box-shadow: 0 6px 12px rgba($color-secundario, 0.2);

  &:hover {
    background-color: color.adjust($color-gris-claro, $lightness: -8%);
    transform: translateY(-3px) scale(1.03);
    box-shadow: 0 10px 16px rgba($color-secundario, 0.3);
  }

  &::after {
    // Efecto ripple
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0);
    animation: ripple 0.6s linear;
    pointer-events: none;
  }

  i,
  svg {
    font-size: 1.8rem;
    transition: transform 0.3s ease, color 0.3s ease;
    pointer-events: none;
    vertical-align: middle;
  }

  &.icon-left {
    @include icon-spacing(left);
  }

  &.icon-right {
    @include icon-spacing(right);
  }

  &:hover i,
  &:hover svg {
    transform: rotate(-10deg) scale(1.2); // ✅ Ajuste: solo una transformación válida
  }
}

// ------------------------------
// Botón secundario
// ------------------------------
.btn--secundario {
  @include button-base($color-gris-claro, $color-primario);
  box-shadow: 0 6px 12px rgba($color-gris-claro, 0.2);

  &:hover {
    background-color: color.adjust($color-gris-claro, $lightness: -8%);
    transform: translateY(-3px) scale(1.03);
    box-shadow: 0 10px 16px rgba($color-gris-claro, 0.3);
  }
}

// ------------------------------
// Botón delineado (outlined)
// ------------------------------
.btn--outlined {
  @include button-base(transparent, $color-secundario);
  border: 2px solid $color-gris-claro;
  background-color: transparent;
  box-shadow: none;

  &:hover {
    background-color: $color-secundario;
    color: $color-blanco;
    transform: translateY(-3px) scale(1.03);
  }
}

// ------------------------------
// Botón solo con ícono
// ------------------------------
.btn--icon-only {
  @include button-icon-only();
  @include icono-btn-estilos();

  i,
  svg {
    font-size: 1.8rem;
    transition: color 0.15s ease, transform 0.2s ease;
    pointer-events: none;
    vertical-align: middle;
  }

  &:hover {
    i,
    svg {
      transform: rotate(15deg) scale(1.2);
    }
  }

  &:focus-visible {
    outline: 2px solid rgba($color-primario, 0.5);
    outline-offset: 4px;
  }
}

// ------------------------------
// Botón estilo ghost
// ------------------------------
.btn--ghost {
  @include button-base(transparent, $color-primario);
  border: 2px solid $color-primario;
  background-color: transparent;
  box-shadow: none;

  &:hover {
    background-color: rgba($color-primario, 0.05);
    transform: scale(1.02);
  }
}

// ------------------------------
// Botón con fondo gradiente para CTA
// ------------------------------
.btn--gradient {
  @include button-base(transparent, $color-blanco);
  background-image: linear-gradient(
    135deg,
    $color-primario 0%,
    $color-secundario 100%
  );
  border: none;
  box-shadow: 0 6px 14px rgba($color-primario, 0.3);

  &:hover {
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 12px 20px rgba($color-secundario, 0.4);
  }
}

// ------------------------------
// Animación ripple
// ------------------------------
@keyframes ripple {
  to {
    transform: scale(4);
    opacity: 0;
  }
}

// =====================================
// Mixin: boton-variantes
// -------------------------------------
// Genera un botón estilizado y reutilizable con múltiples parámetros.
// Controla color de fondo, texto, borde, hover, sombras e íconos personalizados.
//
// @param $bg-color           Color de fondo base del botón.
// @param $text-color         Color de texto base del botón.
// @param $border             Borde del botón (opcional).
// @param $hover-bg           Fondo al hacer hover (opcional).
// @param $hover-text         Color de texto al hacer hover (opcional).
// @param $shadow             Sombra normal (opcional).
// @param $hover-shadow       Sombra al hacer hover (opcional).
// @param $icon-color         Color del ícono base (opcional).
// @param $icon-hover-color   Color del ícono al hacer hover (opcional).
// @param $hover-border       Borde del botón al hacer hover (opcional).
// =====================================

@mixin boton-variantes(
  $bg-color,
  $text-color,
  $border: none,
  $hover-bg: null,
  $hover-text: null,
  $shadow: null,
  $hover-shadow: null,
  $icon-color: null,
  $icon-hover-color: null,
  $hover-border: null
) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 1.6rem;
  font-weight: 600;
  padding: 1.2rem 2.4rem;
  border: $border;
  border-radius: 0.8rem;
  cursor: pointer;
  text-decoration: none;
  line-height: 1.2;
  gap: 2rem;
  position: relative;
  overflow: hidden;
  background-color: $bg-color;
  color: $text-color;
  box-shadow: if($shadow != null, $shadow, none);
  transition: background-color 0.3s ease, transform 0.3s ease,
    box-shadow 0.3s ease, color 0.2s ease, border 0.3s ease;

  // Íconos dentro del botón
  i,
  svg {
    font-size: 1.8rem;
    pointer-events: none;
    vertical-align: middle;
    transition: transform 0.3s ease, color 0.3s ease;
    color: $icon-color or $text-color;
  }

  // Hover general del botón
  &:hover {
    background-color: if($hover-bg != null, $hover-bg, $bg-color);
    color: if($hover-text != null, $hover-text, $text-color);
    border: if($hover-border != null, $hover-border, $border);
    transform: translateY(-3px) scale(1.03);
    box-shadow: if($hover-shadow != null, $hover-shadow, $shadow);

    i,
    svg {
      transform: rotate(-10deg) scale(1.2);
      color: $icon-hover-color or $icon-color or $text-color;
    }
  }

  &.icon-left {
    @include icon-spacing(left);
  }

  &.icon-right {
    @include icon-spacing(right);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
}
