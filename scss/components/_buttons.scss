// =============================================
// _buttons.scss: Estilos reutilizables para botones
// =============================================

@use "../abstracts/variables" as *;
@use "../abstracts/mixins" as *;
@use "sass:color"; // ✅ Importar módulo Sass nativo

// =====================================
// Mixin: boton-variantes
// -------------------------------------
// Estiliza un botón con parámetros flexibles para:
// - color de fondo y texto
// - borde y sombra
// - comportamiento hover
// - personalización de íconos y espaciado
//
// Parámetros:
// $bg-color: color de fondo base del botón
// $text-color: color del texto base
// $border: borde del botón (por defecto: none)
// $hover-bg: color de fondo al hacer hover
// $hover-text: color de texto al hacer hover
// $shadow: sombra normal
// $hover-shadow: sombra al hacer hover
// $icon-color: color del ícono normal
// $icon-hover-color: color del ícono en hover
// $hover-border: borde al hacer hover
// $icon-gap: espacio entre texto e ícono
// =====================================

@mixin boton-variantes(
  $bg-color,
  $text-color,
  $border: none,
  $hover-bg: null,
  $hover-text: null,
  $shadow: null,
  $hover-shadow: null,
  $icon-color: null,
  $icon-hover-color: null,
  $hover-border: null,
  $icon-gap: 1rem
) {
  // Estilos base del botón
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 1.6rem;
  font-weight: 600;
  padding: 1.2rem 2.4rem;
  border: $border;
  border-radius: 0.8rem;
  cursor: pointer;
  text-decoration: none;
  line-height: 1.2;
  position: relative;
  overflow: hidden;
  background-color: $bg-color;
  color: $text-color;
  box-shadow: if($shadow != null, $shadow, none);
  gap: $icon-gap; // Espaciado entre texto e ícono

  transition: background-color 0.3s ease, transform 0.3s ease,
    box-shadow 0.3s ease, color 0.2s ease, border 0.3s ease;

  // Íconos dentro del botón (FontAwesome, RemixIcon, SVG, etc.)
  i,
  svg {
    font-size: 1.8rem;
    pointer-events: none;
    vertical-align: middle;
    color: if($icon-color != null, $icon-color, $text-color);
    transition: transform 0.3s ease, color 0.3s ease;
  }

  // Estado hover
  &:hover {
    background-color: if($hover-bg != null, $hover-bg, $bg-color);
    color: if($hover-text != null, $hover-text, $text-color);
    border: if($hover-border != null, $hover-border, $border);
    transform: translateY(-3px) scale(1.03);
    box-shadow: if($hover-shadow != null, $hover-shadow, $shadow);

    i,
    svg {
      transform: rotate(-10deg) scale(1.2);
      color: if(
        $icon-hover-color != null,
        $icon-hover-color,
        if($icon-color != null, $icon-color, $text-color)
      );
    }
  }

  // Estado deshabilitado
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
}
